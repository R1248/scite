// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String       @id @default(cuid())
    name          String?
    email         String?      @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    stocks        Stock[]
    news          News[]
    worldData     WorldData?
    accountData   AccountData?
}

model WorldData {
    id                  String @id @default(cuid())
    user                User   @relation(fields: [userId], references: [id])
    unemploymentRate    Float  @default(3.27)
    bondYield           Float  @default(3.7)
    inflationRate       Float  @default(4.5)
    retailSalesIncrease Float  @default(0.5)
    geopoliticalRisk    Float  @default(2)
    userId              String @unique
}

model AccountData {
    id     String @id @default(cuid())
    user   User   @relation(fields: [userId], references: [id])
    cash   Float  @default(100000)
    userId String @unique
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Stock {
    id         String      @id @default(cuid())
    logo       String
    name       String
    symbol     String
    category   String
    owned      Int
    firstPrice Float
    priceMoves PriceMove[]
    user       User        @relation(fields: [userId], references: [id])
    userId     String
}

model News {
    id           String   @id @default(cuid())
    heading      String
    text         String
    date         DateTime
    company      String?
    mediaCompany String
    importace    Int
    user         User     @relation(fields: [userId], references: [id])
    userId       String
}

model PriceMove {
    id      String   @id @default(cuid())
    date    DateTime
    price   Float
    stock   Stock    @relation(fields: [stockId], references: [id])
    stockId String
}
